<launch>
  <param name="use_sim_time" value="true" />
  <arg name="lidar_points" default="/lidar_model/velodyne_points" />
  <arg name="camera_optical_frame" default="stereo" />
  <arg name="camera_upright_frame" default="stereo_camera" />
  <arg name="circle_radius" default="0.09" />
  <!--<arg name="circle_centers_distance" default="0.3" />-->
  <arg name="centroid_distance_min" default="0.11" />
  <arg name="centroid_distance_max" default="0.19" />

  <include file="$(find velo2cam_calibration)/launch/stereo_pattern.launch">
    <arg name="camera_optical_frame" value="$(arg camera_optical_frame)" />
    <arg name="camera_upright_frame" value="$(arg camera_upright_frame)" />
    <arg name="circle_radius" value="$(arg circle_radius)"/>
  </include>

  <!--<include file="$(find velo2cam_calibration)/launch/laser_pattern.launch">
    <arg name="lidar_points" value="$(arg lidar_points)" />
    <arg name="centroid_distance_min" value="$(arg centroid_distance_min)" />
    <arg name="centroid_distance_max" value="$(arg centroid_distance_max)" />
    <arg name="circle_radius" value="$(arg circle_radius)"/>
    <arg name="n_rings" value="64" />
  </include>

  <node pkg="velo2cam_calibration" type="velo2cam_calibration" name="velo2cam_calib" output="screen">
    <remap from="~cloud1" to="/laser_pattern/centers_cloud"/>
    <remap from="~cloud2" to="/stereo_pattern/centers_cloud"/>
    <param name="camera_optical_frame" value="$(arg camera_optical_frame)" />
    <param name="camera_upright_frame" value="$(arg camera_upright_frame)" />
    <param name="lidar_frame" value="velo" />
    <param name="publish_tf" value="true" />
    <param name="n_rings" value="64" />
  </node>-->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find velo2cam_calibration)/bagged_cam.rviz" />
</launch>
