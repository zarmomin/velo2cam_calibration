<launch>

  <arg name="stdout" default="screen" />
  <arg name="camera_ns" default="stereo_camera"/>
  <arg name="image_topic_name" default="image_rect_color"/>
  <arg name="expected_pattern_dist_min" default="1.0" />
  <arg name="expected_pattern_dist_max" default="3.0" />
  <arg name="circle_radius" default="0.12" />

  <!-- Full disparity to pointcloud -->
  <group ns="$(arg camera_ns)">
    <!-- Manager + nodelet -->
    <node pkg="nodelet" type="nodelet" name="stereo_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="disparity"
      args="load stereo_image_proc/disparity stereo_manager">
      <param name="disparity_range" value="128"/>
      <param name="correlation_window_size" value="3"/>
      <param name="stereo_algorithm" value="1"/>
      <param name="prefilter_cap" type="int" value="63"/>
      <param name="uniqueness_ratio" type="double" value="10.0"/>
      <param name="speckle_size" type="int" value="100"/>
      <param name="speckle_range" type="int" value="2"/>
      <param name="P1" type="int" value="216"/>
      <param name="P2" type="int" value="864"/>
      <param name="disp12MaxDiff" type="int" value="1"/>
      <remap from="left/image_rect" to="left/$(arg image_topic_name)"/>
      <remap from="right/image_rect" to="right/$(arg image_topic_name)"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="pointclouder_full"
      args="load stereo_image_proc/point_cloud2 stereo_manager _queue_size:=100">
      <remap from="left/image_rect_color" to="left/$(arg image_topic_name)"/>
    </node>
  </group>

  <!-- Edge detection -->
  <node name="edge_detection" pkg="opencv_apps" type="edge_detection" output="$(arg stdout)" >
    <remap from="image" to="/$(arg camera_ns)/left/$(arg image_topic_name)" />
    <param name="use_camera_info" value="false" />
    <param name="debug_view" value="false" />
    <param name="edge_type" value="0" />
    <param name="canny_threshold1" value="100" />
    <param name="canny_threshold2" value="200" />
    <param name="apertureSize" value="3" />
    <param name="apply_blur_pre" value="true" />
    <param name="postBlurSize" value="13" />
    <param name="postBlurSigma" value="3.2" />
    <param name="apply_blur_post" value="false" />
    <param name="L2gradient" value="false" />
  </node>

  <!-- Masked disparity - only edges -->
  <node name="v2c_disp_masker" pkg="velo2cam_calibration" type="v2c_disp_masker" output="$(arg stdout)" >
    <remap from="~image" to="$(arg camera_ns)/disparity" />
    <remap from="~mask" to="edge_detection/image" />
    <remap from="~output" to="$(arg camera_ns)/edges_disparity" />
    <param name="edges_threshold" value="128" />
  </node>

  <!-- Masked disparity to pointcloud -->
  <group ns="$(arg camera_ns)">
    <!-- Manager + nodelet -->
    <node pkg="nodelet" type="nodelet" name="pointclouder_manager_edges" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="pointclouder_edges"
      args="load stereo_image_proc/point_cloud2 pointclouder_manager_edges _queue_size:=100"
      respawn="true">
      <remap from="left/image_rect_color" to="left/$(arg image_topic_name)"/>
      <remap from="disparity" to="edges_disparity"/>
      <remap from="points2" to="edge_points2"/>
    </node>
  </group>

  <!-- PCL generic nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="stereo_pcl_manager" args="manager" output="$(arg stdout)"/>

  <!-- Masked cloud pass through. Filters points along z-axis of camera frame to detect the calibration pattern plane -->
  <node pkg="nodelet" type="nodelet" name="edges_pass_through_z" args="load pcl/PassThrough stereo_pcl_manager" output="$(arg stdout)">
    <remap from="~input" to="/$(arg camera_ns)/edge_points2" />
    <remap from="~output" to="/$(arg camera_ns)/edge_z_filtered_cloud" />
    <rosparam>
      filter_field_name: z
      filter_limit_negative: False
      max_queue_size: 1
      keep_organized: False
    </rosparam>
    <rosparam param="filter_limit_min" subst_value="True">$(arg expected_pattern_dist_min)</rosparam>
    <rosparam param="filter_limit_max" subst_value="True">$(arg expected_pattern_dist_max)</rosparam>
  </node>

  <!-- Full cloud pass through. Filters points along z-axis of camera frame to detect the calibration pattern plane -->
  <node pkg="nodelet" type="nodelet" name="full_pass_through_z" args="load pcl/PassThrough stereo_pcl_manager" output="$(arg stdout)">
    <remap from="~input" to="/$(arg camera_ns)/points2" />
    <remap from="~output" to="/$(arg camera_ns)/z_filtered_cloud" />
    <rosparam>
      filter_field_name: z
      filter_limit_negative: False
      max_queue_size: 1
      keep_organized: False
    </rosparam>
    <rosparam param="filter_limit_min" subst_value="True">$(arg expected_pattern_dist_min)</rosparam>
    <rosparam param="filter_limit_max" subst_value="True">$(arg expected_pattern_dist_max)</rosparam>
  </node>

  <!-- Plane finding on the masked cloud -->
  <node pkg="velo2cam_calibration" type="v2c_plane_segmentation" name="planar_segmentation" output="$(arg stdout)" required="true">
    <remap from="~input"   to="/$(arg camera_ns)/z_filtered_cloud" />
    <rosparam>
      segmentation_type: 1
      axis: [0.0, 1.0, 0.0]
      threshold: 0.01
      eps_angle: 0.55
    </rosparam>
  </node>

  <!-- Extract plane cloud -->
  <node pkg="nodelet" type="nodelet" name="extract_plane_indices" args="load pcl/ExtractIndices stereo_pcl_manager" output="screen">
    <remap from="~input"   to="/$(arg camera_ns)/z_filtered_cloud" />
    <remap from="~indices" to="/planar_segmentation/inliers" />
    <rosparam>
      negative: false
    </rosparam>
  </node>

  <!-- Our node -->
  <node pkg="velo2cam_calibration" type="stereo_pattern" name="stereo_pattern" output="screen">
    <remap from="~cloud2" to="/$(arg camera_ns)/edge_z_filtered_cloud"/>
    <remap from="~cam_plane_coeffs" to="/planar_segmentation/model"/>
    <param name="~min_line_inliers" value="600"/>
    <param name="~min_plane_normal_z" value="0.8"/>
    <param name="~plane_distance_inliers" value="0.1"/>
    <param name="~min_border_x" value="0.99"/>
    <rosparam>
      line_threshold: 0.02
      circle_threshold: 0.01
    </rosparam>
    <rosparam param="circle_radius" subst_value="True">$(arg circle_radius)</rosparam>
  </node>

  <!-- Extract circles cloud -->
  <node pkg="nodelet" type="nodelet" name="extract_circle_indices" args="load pcl/ExtractIndices stereo_pcl_manager" output="screen">
    <remap from="~input"   to="/velo2cam_calibration/z_filtered_cloud" />-
    <remap from="~indices" to="/velo2cam_calibration/inliers" />
    <rosparam>
      negative: false
    </rosparam>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="stereo_ros_tf" args="0 0 0 -1.57079632679 0 -1.57079632679 stereo $(arg camera_ns) 100"/>
</launch>
